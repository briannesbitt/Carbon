name: Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: forge
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 7.1.8
          - php: 7.1.28
          - php: 7.1
          - php: 7.1
            setup: lowest
          - php: 7.1

          - php: 7.2.0
          - php: 7.2.15
          - php: 7.2
          - php: 7.2
            setup: lowest
          - php: 7.2

          - php: 7.3.0
          - php: 7.3.5
          - php: 7.3
            setup: lowest
          - php: 7.3

          - php: 7.4
            setup: lowest
          - php: 7.4
            coverage: true

          - php: 8.0
            composerOptions: --ignore-platform-req=php

          - php: 8.1
            composerOptions: --ignore-platform-req=php

          - php: 8.0
            laravel: true

          - php: 7.4
            styleCheck: true

    name: ${{ matrix.styleCheck && 'Style check - ' || '' }}${{ matrix.laravel && 'Laravel compatibility - ' || '' }}${{ matrix.coverage && 'Coverage - ' || '' }}PHP ${{ matrix.php }} - ${{ matrix.setup || 'stable' }} - ubuntu

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: json${{ matrix.laravel && ', dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, memcached' || '' }}
        tools: composer:v2
        coverage: ${{ matrix.coverage && 'true' || 'none' }}

    - name: Install locales
      run: |
        sudo apt-get update && sudo apt-get install tzdata locales -y && sudo locale-gen fr_FR.UTF-8 sr_ME.UTF-8 ar_AE.UTF-8 zh_TW.UTF-8 zh_CN.UTF-8 yo_NG.UTF-8 en_US.UTF-8

    - name: Setup Memcached
      if: matrix.laravel
      uses: niden/actions-memcached@v7

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.setup }}-${{ matrix.styleCheck && 's-' || '' }}-${{ matrix.laravel && 'l-' || '' }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.setup }}-${{ matrix.styleCheck && 's-' || '' }}-${{ matrix.laravel && 'l-' || '' }}-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: |
        if [[ "${{ matrix.styleCheck }}" != 'true' ]]; then
          composer remove --no-update phpmd/phpmd friendsofphp/php-cs-fixer --no-interaction;
        fi;
        if [[ "${{ matrix.laravel }}" != 'true' ]]; then
          composer remove --no-update kylekatarnls/multi-tester --no-interaction;
        fi;
        composer update --prefer-dist --no-progress --no-suggest --prefer-${{ matrix.setup || 'stable' }} ${{ matrix.composerOptions }};

    - name: Run test suite
      run: |
        if [[ "${{ matrix.laravel }}" != 'true' && "${{ matrix.styleCheck }}" != 'true' && "${{ matrix.coverage }}" = 'true' ]]; then
          php -d memory_limit=-1 -d zend.enable_gc=0 vendor/phpunit/phpunit/phpunit --coverage-clover=coverage.xml --coverage-text;
          cp coverage.xml clover.xml;
        fi;
        if [[ "${{ matrix.laravel }}" != 'true' && "${{ matrix.styleCheck }}" != 'true' && "${{ matrix.coverage }}" != 'true' ]]; then
          php -d memory_limit=-1 -d zend.enable_gc=0 vendor/phpunit/phpunit/phpunit;
        fi;
        if [[ "${{ matrix.laravel }}" != 'true' && "${{ matrix.styleCheck }}" = 'true' ]]; then
          composer style-check;
        fi;
        if [[ "${{ matrix.laravel }}" = 'true' ]]; then
          vendor/bin/multi-tester;
        fi;
      env:
        PHP_VERSION: ${{ matrix.php }}
        REDIS_HOST: 127.0.0.1
        REDIS_PORT: 6379
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_USERNAME: root

    - name: Code Climate Test Reporter
      if: matrix.coverage
      uses: aktions/codeclimate-test-reporter@v1
      with:
        codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
        command: after-build -t clover
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      continue-on-error: true

    - name: Coverage
      if: matrix.coverage
      run: bash <(curl -s https://codecov.io/bash)
      env:
        PHP_VERSION: ${{ matrix.php }}

  windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 7.1.8
          - php: 7.1.28
          - php: 7.1
          - php: 7.1
            setup: lowest
          - php: 7.1

          - php: 7.2.0
          - php: 7.2.15
          - php: 7.2
          - php: 7.2
            setup: lowest
          - php: 7.2

          - php: 7.3.0
          - php: 7.3.5
          - php: 7.3
            setup: lowest
          - php: 7.3

          - php: 7.4
            setup: lowest
          - php: 7.4
            coverage: true

          - php: 8.0
            composerOptions: --ignore-platform-req=php

          - php: 8.1
            composerOptions: --ignore-platform-req=php

          - php: 7.3.0

          - php: 8.0

    name: PHP ${{ matrix.php }} - ${{ matrix.setup || 'stable' }} - windows

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json
          tools: composer:v2
          coverage: none

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.setup }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.setup }}-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          composer remove --no-update kylekatarnls/multi-tester phpmd/phpmd friendsofphp/php-cs-fixer --no-interaction;
          composer update --prefer-dist --no-progress --no-suggest --prefer-${{ matrix.setup || 'stable' }} ${{ matrix.composerOptions }};

      - name: Run test suite
        run: |
          php -d memory_limit=-1 -d zend.enable_gc=0 vendor/phpunit/phpunit/phpunit;
        env:
          PHP_VERSION: ${{ matrix.php }}
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
